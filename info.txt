
avr.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__Vectors>:
   0:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
   4:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
   8:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
   c:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  10:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  14:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  18:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  1c:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  20:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  24:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  28:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  2c:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  30:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  34:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  38:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  3c:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  40:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  44:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  48:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  4c:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>
  50:	0c 94 2f 00 	jmp	0x5e	; 0x5e <Init_Data_start>

00000054 <init_stack>:
  54:	1f be       	out	0x3f, r1	; 63
  56:	0f e5       	ldi	r16, 0x5F	; 95
  58:	0e bf       	out	0x3e, r16	; 62
  5a:	08 e0       	ldi	r16, 0x08	; 8
  5c:	0d bf       	out	0x3d, r16	; 61

0000005e <Init_Data_start>:
  5e:	10 e0       	ldi	r17, 0x00	; 0
  60:	a6 e6       	ldi	r26, 0x66	; 102
  62:	b0 e0       	ldi	r27, 0x00	; 0
  64:	ee e0       	ldi	r30, 0x0E	; 14
  66:	f1 e0       	ldi	r31, 0x01	; 1
  68:	24 e0       	ldi	r18, 0x04	; 4
  6a:	00 27       	eor	r16, r16
  6c:	20 17       	cp	r18, r16
  6e:	31 f0       	breq	.+12     	; 0x7c <init_bss>
  70:	02 c0       	rjmp	.+4      	; 0x76 <Address_Compare>

00000072 <Data_copy>:
  72:	05 90       	lpm	r0, Z+
  74:	0d 92       	st	X+, r0

00000076 <Address_Compare>:
  76:	aa 36       	cpi	r26, 0x6A	; 106
  78:	b1 07       	cpc	r27, r17
  7a:	d9 f7       	brne	.-10     	; 0x72 <Data_copy>

0000007c <init_bss>:
  7c:	aa e6       	ldi	r26, 0x6A	; 106
  7e:	10 e0       	ldi	r17, 0x00	; 0
  80:	b0 e0       	ldi	r27, 0x00	; 0
  82:	30 e0       	ldi	r19, 0x00	; 0
  84:	01 c0       	rjmp	.+2      	; 0x88 <Clear_Bss>

00000086 <Do_Clear_Bss>:
  86:	3d 93       	st	X+, r19

00000088 <Clear_Bss>:
  88:	ae 36       	cpi	r26, 0x6E	; 110
  8a:	b1 07       	cpc	r27, r17
  8c:	e1 f7       	brne	.-8      	; 0x86 <Do_Clear_Bss>
  8e:	0e 94 4d 00 	call	0x9a	; 0x9a <main>
  92:	0c 94 4b 00 	jmp	0x96	; 0x96 <stop>

00000096 <stop>:
  96:	f8 94       	cli
  98:	fe cf       	rjmp	.-4      	; 0x96 <stop>

0000009a <main>:

int Hmadh (void);


int main (void)
{
  9a:	df 93       	push	r29
  9c:	cf 93       	push	r28
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
	(*(volatile u8 *)0x800065)=9;
  a2:	e5 e6       	ldi	r30, 0x65	; 101
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	89 e0       	ldi	r24, 0x09	; 9
  a8:	80 83       	st	Z, r24
	PORTB_Bit0 = 0;
  aa:	e8 e3       	ldi	r30, 0x38	; 56
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	80 81       	ld	r24, Z
  b0:	8e 7f       	andi	r24, 0xFE	; 254
  b2:	80 83       	st	Z, r24
	PORTB_Bit1 = 0;
  b4:	e8 e3       	ldi	r30, 0x38	; 56
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	8d 7f       	andi	r24, 0xFD	; 253
  bc:	80 83       	st	Z, r24
	PORTB_Bit2 = 1;
  be:	e8 e3       	ldi	r30, 0x38	; 56
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	80 81       	ld	r24, Z
  c4:	84 60       	ori	r24, 0x04	; 4
  c6:	80 83       	st	Z, r24
	PORTB_Bit3 = 1;
  c8:	e8 e3       	ldi	r30, 0x38	; 56
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	88 60       	ori	r24, 0x08	; 8
  d0:	80 83       	st	Z, r24
  d2:	ff cf       	rjmp	.-2      	; 0xd2 <main+0x38>

000000d4 <Hmadh>:
	while(1);
	return 0;
}

int Hmadh (void)
{
  d4:	df 93       	push	r29
  d6:	cf 93       	push	r28
  d8:	cd b7       	in	r28, 0x3d	; 61
  da:	de b7       	in	r29, 0x3e	; 62
	(*(volatile u8 *)0x800065)=9;
  dc:	e5 e6       	ldi	r30, 0x65	; 101
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	89 e0       	ldi	r24, 0x09	; 9
  e2:	80 83       	st	Z, r24
	PORTB_Bit0 = 0;
  e4:	e8 e3       	ldi	r30, 0x38	; 56
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	80 83       	st	Z, r24
	PORTB_Bit1 = 0;
  ee:	e8 e3       	ldi	r30, 0x38	; 56
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	8d 7f       	andi	r24, 0xFD	; 253
  f6:	80 83       	st	Z, r24
	PORTB_Bit2 = 1;
  f8:	e8 e3       	ldi	r30, 0x38	; 56
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	80 81       	ld	r24, Z
  fe:	84 60       	ori	r24, 0x04	; 4
 100:	80 83       	st	Z, r24
	PORTB_Bit3 = 1;
 102:	e8 e3       	ldi	r30, 0x38	; 56
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	88 60       	ori	r24, 0x08	; 8
 10a:	80 83       	st	Z, r24
 10c:	ff cf       	rjmp	.-2      	; 0x10c <Hmadh+0x38>
